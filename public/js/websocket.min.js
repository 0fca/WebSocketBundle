!function(e){var n=function(){"use strict";function r(e,n){if(!(e instanceof n)){throw new TypeError("Cannot call a class as a function")}}function i(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||false;i.configurable=true;if("value"in i)i.writable=true;Object.defineProperty(e,i.key,i)}}function n(e,n,t){if(n)i(e.prototype,n);if(t)i(e,t);return e}function s(e,n){var t=n.get(e);if(!t){throw new TypeError("attempted to get private field on non-instance")}if(t.get){return t.get.call(e)}return t.value}function o(e,n,t){if(!n.has(e)){throw new TypeError("attempted to get private field on non-instance")}return t}function a(e,n,t){var i=n.get(e);if(!i){throw new TypeError("attempted to set private field on non-instance")}if(i.set){i.set.call(e,t)}else{if(!i.writable){throw new TypeError("attempted to set read only private field")}i.value=t}return t}var u=new WeakMap,c=new WeakMap,l=new WeakMap,f=new WeakSet,h=new WeakSet,d=function(){function i(e,n,t){r(this,i);h.add(this);f.add(this);u.set(this,{writable:true,value:void 0});c.set(this,{writable:true,value:{}});l.set(this,{writable:true,value:null});a(this,u,e);o(this,f,b).call(this,n,t)}n(i,[{key:"isConnected",value:function e(){return s(this,l)!==null}},{key:"off",value:function e(n,t){if(!(s(this,c)[n]instanceof Array)){return}var i,r=s(this,c)[n],o=r.length;for(i=0;i<o;i++){if(r[i]===t){r.splice(i,1);break}}}},{key:"on",value:function e(n,t){if(typeof s(this,c)[n]==="undefined"){s(this,c)[n]=[]}s(this,c)[n].push(t)}},{key:"publishToTopic",value:function e(n){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(!this.isConnected()){throw new Error("Websocket session is not active, cannot publish to URI")}s(this,l).publish(n,t)}},{key:"rpcCall",value:function e(n){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(!this.isConnected()){throw new Error("Websocket session is not active, cannot perform RPC call")}return s(this,l).call(n,t)}},{key:"subscribeToChannel",value:function e(n,t){if(!this.isConnected()){throw new Error("Websocket session is not active, cannot subscribe to channel")}try{s(this,l).subscribe(n,t)}catch(e){if(e.message.indexOf(" already subscribed for topic ")!==-1){}else{throw e}}}},{key:"unsubscribeFromChannel",value:function e(n,t){if(!this.isConnected()){throw new Error("Websocket session is not active, cannot unsubscribe from channel")}try{s(this,l).unsubscribe(n,t)}catch(e){if(e.message.indexOf("not subscribed to topic ")!==-1||e.message.indexOf(" subscribed on topic ")!==-1){}else{throw e}}}},{key:"autobahn",get:function e(){return s(this,u)}},{key:"session",get:function e(){return s(this,l)}}]);return i}(),b=function e(n){var i=this;var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;s(this,u).connect(n,function(e){a(i,l,e);o(i,h,v).call(i,"socket/connect",e)},function(e,n,t){a(i,l,null);o(i,h,v).call(i,"socket/disconnect",{code:e,reason:n})},t)},v=function e(n){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!(s(this,c)[n]instanceof Array)){return}var i,r=s(this,c)[n],o=r.length;for(i=0;i<o;i++){r[i].call(this,t)}},e,t=new(function(){function e(){r(this,e)}n(e,[{key:"connect",value:function e(n){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(typeof global.ab==="undefined"){throw new Error("GosSocket requires AutobahnJS to be loaded.")}return new d(global.ab,n,t)}}],[{key:"instance",get:function e(){return t}}]);return e}());return t}();"function"==typeof define&&define.amd?define([],n):"object"==typeof module&&module.exports?module.exports=n:e.WS=n}(this);