services:
    gos_web_socket.entry_point:
        class: Gos\Bundle\WebSocketBundle\Server\EntryPoint
        public: true
        arguments:
            - '@gos_web_socket.server.registry'

    gos_web_socket.websocket_server.command:
        class: Gos\Bundle\WebSocketBundle\Command\WebsocketServerCommand
        public: false
        arguments:
            - '@gos_web_socket.entry_point'
            - '%web_socket_server.host%'
            - '%web_socket_server.port%'
        tags:
            - { name: console.command, command: gos:websocket:server }

    gos_web_socket.ws.client:
        class: Gos\Component\WebSocketClient\Wamp\Client
        public: true
        arguments:
            - '%web_socket_server.host%'
            - '%web_socket_server.port%'
        calls:
            - [ setLogger, ['@?monolog.logger.websocket'] ]

    gos_web_socket.ws.server:
        class: Gos\Bundle\WebSocketBundle\Server\Type\WebSocketServer
        public: false
        arguments:
            - '@gos_web_socket.ws.server_builder'
            - '@gos_web_socket.server.event_loop'
            - '@event_dispatcher'
        calls:
            - [ setLogger, ['@?monolog.logger.websocket'] ]
        tags:
            - { name: gos_web_socket.server }

    gos_web_socket.ws.server_builder:
        class: Gos\Bundle\WebSocketBundle\Server\App\ServerBuilder
        public: false
        arguments:
            - '@gos_web_socket.server.event_loop'
            - '@gos_web_socket_server.wamp_application'
            - '@gos_web_socket.wamp.topic_manager'
            - '@gos_web_socket.origins.registry'
            - '@event_dispatcher'
            - '%web_socket_origin_check%'
            - '%web_socket_keepalive_ping%'
            - '%web_socket_keepalive_interval%'

    gos_web_socket.server.registry:
        class: Gos\Bundle\WebSocketBundle\Server\App\Registry\ServerRegistry
        public: true

    gos_web_socket.rpc.dispatcher:
        class: Gos\Bundle\WebSocketBundle\Server\App\Dispatcher\RpcDispatcher
        public: true
        arguments:
            - '@gos_web_socket.rpc.registry'

    gos_web_socket.rpc.registry:
        class: Gos\Bundle\WebSocketBundle\Server\App\Registry\RpcRegistry
        public: true

    gos_web_socket.topic.dispatcher:
        class: Gos\Bundle\WebSocketBundle\Server\App\Dispatcher\TopicDispatcher
        public: true
        arguments:
            - '@gos_web_socket.topic.registry'
            - '@gos_web_socket.router.wamp'
            - '@gos_web_socket.topic.periodic_timer'
            - '@gos_web_socket.wamp.topic_manager'
        calls:
            - [ setLogger, ['@?monolog.logger.websocket'] ]

    gos_web_socket.topic.registry:
        class: Gos\Bundle\WebSocketBundle\Server\App\Registry\TopicRegistry
        public: true

    gos_web_socket.periodic.registry:
        class: Gos\Bundle\WebSocketBundle\Server\App\Registry\PeriodicRegistry
        public: true

    gos_web_socket.origins.registry:
        class: Gos\Bundle\WebSocketBundle\Server\App\Registry\OriginRegistry
        public: true

    gos_web_socket_server.wamp_application:
        class: Gos\Bundle\WebSocketBundle\Server\App\WampApplication
        public: false
        arguments:
            - '@gos_web_socket.rpc.dispatcher'
            - '@gos_web_socket.topic.dispatcher'
            - '@event_dispatcher'
            - '@gos_web_socket.client_storage'
            - '@gos_web_socket.router.wamp'
        calls:
            - [ setLogger, ['@?monolog.logger.websocket'] ]

    gos_web_socket.client_storage:
        class: Gos\Bundle\WebSocketBundle\Client\ClientStorage
        public: false
        arguments:
            - '%web_socket_server.client_storage.ttl%'
        calls:
            - [ setLogger, ['@?monolog.logger.websocket'] ]

    gos_web_socket.client_storage.doctrine.decorator:
        class: Gos\Bundle\WebSocketBundle\Client\Driver\DoctrineCacheDriverDecorator
        public: false
        # argument are set via compiler pass

    gos_web_socket.client_storage.symfony.decorator:
        class: Gos\Bundle\WebSocketBundle\Client\Driver\SymfonyCacheDriverDecorator
        public: false
        # argument are set via compiler pass

    gos_web_socket.server.in_memory.client_storage.driver:
        class: Gos\Bundle\WebSocketBundle\Client\Driver\InMemoryDriver
        public: false

    gos_web_socket.client_event.listener:
        class: Gos\Bundle\WebSocketBundle\Event\ClientEventListener
        public: false
        arguments:
            - '@gos_web_socket.client_storage'
            - '@gos_web_socket.websocket_authentification.provider'
        calls:
            - [ setLogger, ['@?monolog.logger.websocket'] ]
        tags:
            - { name: kernel.event_listener, event: 'gos_web_socket.client_connected', method: onClientConnect }
            - { name: kernel.event_listener, event: 'gos_web_socket.client_disconnected', method: onClientDisconnect }
            - { name: kernel.event_listener, event: 'gos_web_socket.client_error', method: onClientError }
            - { name: kernel.event_listener, event: 'gos_web_socket.client_rejected', method: onClientRejected }

    gos_web_socket.null.pubsub.router:
        class: Gos\Bundle\WebSocketBundle\Router\NullPubSubRouter
        public: false

    gos_web_socket.router.wamp:
        class: Gos\Bundle\WebSocketBundle\Router\WampRouter
        public: false
        arguments:
            - '@gos_web_socket.null.pubsub.router'
            - '%kernel.debug%'
            - '@?monolog.logger.websocket'

    gos_web_socket.periodic_ping.doctrine:
        class: Gos\Bundle\WebSocketBundle\Periodic\DoctrinePeriodicPing
        abstract: true
        public: false
        # arguments are set by the container extension
        calls:
            - [ setLogger, ['@?monolog.logger.websocket'] ]

    gos_web_socket.periodic_ping.pdo:
        class: Gos\Bundle\WebSocketBundle\Periodic\PdoPeriodicPing
        abstract: true
        public: false
        # arguments are set by the container extension
        calls:
            - [ setLogger, ['@?monolog.logger.websocket'] ]

    gos_web_socket.memory_usage.periodic:
        class: Gos\Bundle\WebSocketBundle\Periodic\PeriodicMemoryUsage
        public: false
        arguments:
            - '@?monolog.logger.websocket'

    gos_web_socket.pnctl_event.listener:
        class: Gos\Bundle\WebSocketBundle\Event\StartServerListener
        public: false
        arguments:
            - '@gos_web_socket.periodic.registry'
            - '@gos_web_socket.server_push_handler.registry'
        calls:
            - [ setLogger, ['@?monolog.logger.websocket'] ]
        tags:
            - { name: kernel.event_listener, event: 'gos_web_socket.server_launched', method: bindPnctlEvent }

    gos_web_socket.event_listener.register_periodic_memory_timer:
        class: Gos\Bundle\WebSocketBundle\Event\RegisterPeriodicMemoryTimerListener
        public: false
        arguments:
            - '@gos_web_socket.periodic.registry'
        calls:
            - [ setLogger, ['@?monolog.logger.websocket'] ]
        tags:
            - { name: kernel.event_listener, event: 'gos_web_socket.server_launched', method: registerPeriodicHandler, priority: 255 }

    gos_web_socket.event_listener.register_periodic_timers:
        class: Gos\Bundle\WebSocketBundle\Event\RegisterPeriodicTimersListener
        public: false
        arguments:
            - '@gos_web_socket.periodic.registry'
        calls:
            - [ setLogger, ['@?monolog.logger.websocket'] ]
        tags:
            - { name: kernel.event_listener, event: 'gos_web_socket.server_launched', method: registerPeriodics }

    gos_web_socket.event_listener.register_push_handlers:
        class: Gos\Bundle\WebSocketBundle\Event\RegisterPushHandlersListener
        public: false
        arguments:
            - '@gos_web_socket.server_push_handler.registry'
            - '@gos_web_socket_server.wamp_application'
        calls:
            - [ setLogger, ['@?monolog.logger.websocket'] ]
        tags:
            - { name: kernel.event_listener, event: 'gos_web_socket.server_launched', method: registerPushHandlers }

    gos_web_socket.server.event_loop:
        class: React\EventLoop\LoopInterface
        public: true
        factory: ['React\EventLoop\Factory', 'create']

    gos_web_socket.topic.periodic_timer:
        class: Gos\Bundle\WebSocketBundle\Topic\TopicPeriodicTimer
        public: true
        arguments:
            - '@gos_web_socket.server.event_loop'

    gos_web_socket.websocket_authentification.provider:
        class: Gos\Bundle\WebSocketBundle\Client\Auth\WebsocketAuthenticationProvider
        public: false
        arguments:
            - '@gos_web_socket.client_storage'
            - '%gos_web_socket.firewall%'
        calls:
            - [ setLogger, ['@?monolog.logger.websocket'] ]

    gos_web_socket.websocket.client_manipulator:
        class: Gos\Bundle\WebSocketBundle\Client\ClientManipulator
        public: true
        arguments:
            - '@gos_web_socket.client_storage'
            - '@gos_web_socket.websocket_authentification.provider'

    gos_web_socket.abstract.pusher:
        class: Gos\Bundle\WebSocketBundle\Pusher\AbstractPusher
        abstract: true
        public: false
        calls:
            - [ setRouter, ['@gos_web_socket.router.wamp'] ]
            - [ setSerializer, ['@gos_web_socket.push_message.serializer'] ]

    gos_web_socket.zmq.pusher:
        parent: gos_web_socket.abstract.pusher
        class: Gos\Bundle\WebSocketBundle\Pusher\Zmq\ZmqPusher
        tags:
            - { name: gos_web_socket.pusher, alias: zmq }

    gos_web_socket.zmq.server_push_handler:
        class: Gos\Bundle\WebSocketBundle\Pusher\Zmq\ZmqServerPushHandler
        arguments:
            - '@gos_web_socket.zmq.pusher'
            - '@gos_web_socket.router.wamp'
            - '@gos_web_socket.push_message.serializer'
            - '@event_dispatcher'
            - '@?monolog.logger.websocket'
        tags:
            - { name: gos_web_socket.push_handler, alias: zmq }

    gos_web_socket.amqp.pusher:
        parent: gos_web_socket.abstract.pusher
        class: Gos\Bundle\WebSocketBundle\Pusher\Amqp\AmqpPusher
        tags:
            - { name: gos_web_socket.pusher, alias: amqp }

    gos_web_socket.wamp.pusher:
        parent: gos_web_socket.abstract.pusher
        class: Gos\Bundle\WebSocketBundle\Pusher\Wamp\WampPusher
        tags:
            - { name: gos_web_socket.pusher, alias: wamp }

    gos_web_socket.amqp.server_push_handler:
        class: Gos\Bundle\WebSocketBundle\Pusher\Amqp\AmqpServerPushHandler
        arguments:
            - '@gos_web_socket.amqp.pusher'
            - '@gos_web_socket.router.wamp'
            - '@gos_web_socket.push_message.serializer'
            - '@event_dispatcher'
            - '@?monolog.logger.websocket'
        tags:
            - { name: gos_web_socket.push_handler, alias: amqp }

    gos_web_socket.wamp.topic_manager:
        class: Gos\Bundle\WebSocketBundle\Topic\TopicManager
        public: true
        calls:
            - [ setWampApplication, ['@gos_web_socket_server.wamp_application'] ]

    gos_web_socket.kernel_event.terminate:
        class: Gos\Bundle\WebSocketBundle\Event\KernelTerminateListener
        public: false
        arguments:
            - '@gos_web_socket.pusher_registry'

    gos_web_socket.push_message.serializer:
        class: Gos\Bundle\WebSocketBundle\Pusher\Serializer\MessageSerializer
        public: false

    gos_web_socket.pusher_registry:
        class: Gos\Bundle\WebSocketBundle\Pusher\PusherRegistry
        public: true

    gos_web_socket.server_push_handler.registry:
        class: Gos\Bundle\WebSocketBundle\Pusher\ServerPushHandlerRegistry
        public: true

    gos_web_socket.data_collector:
        class: Gos\Bundle\WebSocketBundle\DataCollector\WebsocketDataCollector
        public: false
        tags:
            - { name: data_collector, template: '@GosWebSocket/Collector/websocket.html.twig', id: 'websocket' }
